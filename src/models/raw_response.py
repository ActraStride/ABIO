"""
Module: raw_response

Defines the RawResponse model for handling AI-generated responses.

This module provides a Pydantic model to standardize and validate the structure
of responses generated by AI models. It includes fields for the generated text,
token counts, model name, and optional metadata.

Example:
    >>> from src.models.raw_response import RawResponse
    >>> response = RawResponse(
    ...     generated_text="Hello, world!",
    ...     prompt_tokens=5,
    ...     response_tokens=10,
    ...     model_name="gemini-1.5-flash",
    ...     metadata={"temperature": 0.7}
    ... )
    >>> print(response.generated_text)

Dependencies:
    - pydantic
    - typing
"""

from typing import Optional, Any, Dict
from pydantic import BaseModel, Field, validator


class RawResponse(BaseModel):
    """
    Represents the structure of an AI-generated response.

    Attributes:
        generated_text (str): The text generated by the AI model.
        prompt_tokens (int): The number of tokens in the input prompt.
        response_tokens (int): The number of tokens in the generated response.
        model_name (str): The name of the model used for generation.
        metadata (Optional[Dict[str, Any]]): Additional metadata about the response (e.g., temperature, top_p).
    """
    generated_text: str
    prompt_tokens: int = Field(gt=0)
    response_tokens: int = Field(gt=0)
    model_name: str
    metadata: Optional[Dict[str, Any]] = None
    
    @validator('generated_text', 'model_name')
    def validate_non_empty_string(cls, v):
        """
        Validates that string fields are not empty or whitespace.
        
        Args:
            v (str): The string value to validate
            
        Returns:
            str: The validated string
            
        Raises:
            ValueError: If the string is empty or only whitespace
        """
        if not v or not v.strip():
            raise ValueError("String fields cannot be empty or whitespace")
        return v
    
    class Config:
        """
        Pydantic configuration for the RawResponse model.
        """
        from_attributes = True  # Enables compatibility with ORMs
        validate_assignment = True  # Validate values on assignment, not just during initialization